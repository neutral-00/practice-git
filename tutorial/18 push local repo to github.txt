

## steps - create repo in github first
- login to your github account
- look for a new repository button, click on it
- fill in the required details
	- i gave repository name: practice-git
- submit the details
- now look for  a button called code
- copy the url under clone>https section
- for me it looks like: https://github.com/neutral-00/practice-git.git

## link local repo to github repo
- come back to your local folder
- in the windows explorer bar type: git-bash
- now in the terminal type(if you had not initialized local repo):
$ git init
$ git remote add origin {remote_repo_url}
- in my case it is
$ git remote add origin https://github.com/neutral-00/practice-git.git
$ git pull
- if want to track everything type
$ git add .
$ git commit -m "first commit"
- since i didn't set the email i got the below error:
Author identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'toarv@Neutral00.(none)')
- let me set my email
$ git config --global user.email "to.arvmail@gmail.com"
- now try the commit command again
$ git commit -m "first commit"
- it should work
- now push to the github repo
$ git push
- i got another error as:
fatal: The current branch main has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin main

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.
- lets run the suggested command and push again
$ git push --set-upstream origin main
- I go another error:  ! [rejected]        main -> main (fetch first)
- looks like we need to fetch first
$ git pull
If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/<branch> main
- I typed the below command
$ git branch --set-upstream-to=origin/main main
branch 'main' set up to track 'origin/main'
$ git status
On branch main
Your branch and 'origin/main' have diverged,
and have 3 and 1 different commits each, respectively.
  (use "git pull" if you want to integrate the remote branch with yours)

nothing to commit, working tree clean

toarv@Neutral00 MINGW64 /d/Github Projects/practice-git (main)
$ git pull
fatal: refusing to merge unrelated histories
- then i tried the below option:
$ git pull origin main --allow-unrelated-histories
From https://github.com/neutral-00/practice-git
 * branch            main       -> FETCH_HEAD
Merge made by the 'ort' strategy.
 LICENSE | 674 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 674 insertions(+)
 create mode 100644 LICENSE
